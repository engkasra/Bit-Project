

services:
  db:
    image: postgres:15-alpine
    container_name: crypto_exchange_db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    env_file:
      - .env

  web:
    build: .
    container_name: crypto_exchange_web
    ports:
      - "8000:8000"
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=${DATABASE_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DEBUG}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge
